@import "tailwindcss";
@import "tw-animate-css";
/* Basic reset and font settings if not already present */
html, body {
  background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%);  margin: 0;
  padding: 0;
  overflow-x: hidden;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Ensure your main app container doesn't have overflow hidden if it's the root */
#root, .App {
  min-height: 100vh;
  color: white; /* Default text color */
}

/* Section specific styling */
#parallax {
  background-color: #000; /* Black background for the parallax section */
  min-height: 100vh; /* Ensure it takes at least full viewport height */
}

/* Parallax Container for the Watch */
/* The key here is relative positioning and then absolute for children.
   Framer Motion's useScroll with offset will handle the "pinning" effect
   by calculating the scroll progress relative to this container's entry/exit.
   The 'h-[200vh]' gives enough scroll range to see the animation.
*/
.relative.h-\[200vh\] { /* Target the div with h-[200vh] */
  position: relative;
  width: 100vw;
  height: 200vh; /* Defines the scroll range for the animation */
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

/* All direct children that are layers should be absolute and centered */
/* In your CSS file (e.g., App.css or a dedicated component CSS) */

.apple-watch-group {
  position: absolute;
  top: 50%;
  left: 50%;
  /* This centers the group, and motion.div's y will then offset from this centered position */
  transform: translate(-50%, -50%);
  width: 400px; /* Example: set a base size for the group */
  height: 400px; /* Example: set a base size for the group */
  display: flex; /* Helps with internal alignment if needed, but absolute is key */
  justify-content: center;
  align-items: center;
}

/* All watch parts should be absolute and positioned relative to the apple-watch-group */
.watch-band,
.watch-body,
.watch-screen-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Centers each part within its parent */
  width: 100%; /* Or specific px based on your SVG design */
  height: 100%; /* Or specific px based on your SVG design */
  /* Ensure proper z-index for layering */
}

.watch-band { z-index: 10; } /* Behind the body */
.watch-body { z-index: 20; } /* Main body */
.watch-screen-container { z-index: 30; } /* Screen on top */

.watch-face {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80%; /* Adjust size relative to the screen container */
  height: 80%; /* Adjust size relative to the screen container */
  opacity: 0;
  transition: opacity 0.5s ease-in-out; /* Smooth transition for face change */
}

.watch-face.active {
  opacity: 1;
}

/* Icons (Heart, Steps) need similar centering/positioning for their base */
.icon-float {
    position: absolute;
    /* These will be moved by useTransform, but their base position needs to be set */
    /* For example, if you want them generally around the watch */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* You might want to offset them slightly from center if they are always visible */
}
.heart-icon { /* Specific initial offset for heart */ }
.steps-icon { /* Specific initial offset for steps */ }

/* The overall parallax container */
#parallax .relative.h-\[200vh\] {
  position: relative;
  background: transparent !important; /* Ensure no background color interferes */
  height: 200vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden; /* Crucial to prevent scrollbars from SVG overflows */
}
.watch-layer {
  transform-style: preserve-3d;
}

.text-primary { color: #8A2BE2; /* Example Primary color */ }
.text-accent-lavender { background-color: #8A2BE2; }
.text-accent-teal { background-color: #00BCD4; }
@custom-variant dark (&:is(.dark *));

@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
